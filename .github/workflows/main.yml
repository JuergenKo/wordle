name: Build Android APK

on:
  push:
    branches: [ "main" ]
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug - List files
      run: |
        echo "Contents of the repository:"
        ls -la
        echo "Contents of data directory:"
        ls -la data/ || echo "data/ not found"
        echo "Contents of kv directory:"
        ls -la kv/ || echo "kv/ not found"

    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        # Install ALL build dependencies in one go
        sudo apt-get install -y \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          python3-pip \
          python3-setuptools \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libffi-dev \
          libssl-dev \
          libsqlite3-dev

    - name: Upgrade Pip and Setuptools
      run: |
        python3 -m pip install --upgrade pip setuptools virtualenv

    - name: Install Buildozer
      run: |
        # Use a specific, known-good version of Buildozer for stability
        python3 -m pip install --user buildozer

    - name: Add Buildozer to PATH
      run: |
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Show Buildozer version and debug info
      run: |
        which buildozer
        buildozer --version
        python3 --version

    - name: Run Buildozer target
      run: |
        # First, run a simple command to list targets and check environment
        buildozer --version
        echo "Buildozer environment seems OK."

    - name: Build APK with Buildozer (Full Verbose)
      run: |
        # The main build command with maximum verbosity
        buildozer -v android debug 2>&1 | tee build.log
        # If buildozer fails, the next command will run and show the end of the log for clues
        tail -n 50 build.log || echo "No build.log found"

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: wordle-apk
        path: bin/*.apk

    - name: Upload Build Log (for debugging if failed)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: build.log

    - name: Upload to Release
      if: success() && github.event_name == 'release'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: bin/*.apk
        asset_name: Wordle-Release.apk
        tag: ${{ github.ref }}
