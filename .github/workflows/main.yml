name: Build Android APK

on:
  push:
    branches: [ "main" ]
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:   # <-- this job name was missing
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y git zip unzip python3 python3-pip python3-venv python3-setuptools autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev

    - name: Set up Python Virtual Environment
      run: |
        python3 -m venv venv
        source venv/bin/activate
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
        echo "PATH=$VIRTUAL_ENV/bin:$PATH" >> $GITHUB_ENV

    - name: Install Buildozer and Cython
      run: |
        source venv/bin/activate
        pip install cython==0.29.33
        pip install buildozer

    - name: Verify Java version
      run: |
        echo "=== Java Version ==="
        java -version
        javac -version
        echo "=== JAVA_HOME ==="
        echo $JAVA_HOME

    - name: Debug and fix buildozer.spec
      working-directory: ./wordle
      run: |
        source ../venv/bin/activate
        echo "=== Fixing buildozer.spec ==="
    
        if [ -f "buildozer.spec" ]; then
          cp buildozer.spec buildozer.spec.backup
    
          if grep -q "^source.include_exts" buildozer.spec; then
            if ! grep -q "txt" buildozer.spec; then
              sed -i '/^source.include_exts/ s/$/,txt,json/' buildozer.spec
            fi
          else
            echo "source.include_exts = py,png,jpg,kv,atlas,txt,json" >> buildozer.spec
          fi
    
          if ! grep -q "^source.include_patterns" buildozer.spec; then
            echo "source.include_patterns = solutions.txt, words.txt, words_choose.txt, game_data.json" >> buildozer.spec
          fi
    
          echo "=== Fixed buildozer.spec ==="
          grep -E "(source\.include|android\.add_dirs)" buildozer.spec
        else
          echo "❌ buildozer.spec not found!"
        fi

    - name: Ensure data files exist
      working-directory: ./wordle
      run: |
        source ../venv/bin/activate
        mkdir -p data
        echo "HELLO" > data/solutions.txt
        echo "WORLD" >> data/solutions.txt
        echo "WORDLE" >> data/solutions.txt
        echo "CHOOSE" > data/words_choose.txt
        echo "WORDS" >> data/words_choose.txt
        echo "✅ Data files ready:"
        ls -la data/

    - name: Build the APK with Java 17
      working-directory: ./wordle
      run: |
        source ../venv/bin/activate
        echo "=== Starting the build process ==="
        JAVA_HOME=$JAVA_HOME buildozer -v android debug

    - name: Verify APK contents
      working-directory: ./wordle
      run: |
        source ../venv/bin/activate
        APK_FILE=$(find . -name "*.apk" -type f | head -1)
        if [ -z "$APK_FILE" ]; then
          echo "No APK file found"
          exit 0
        fi
        echo "APK file: $APK_FILE"
        mkdir -p apk_analysis
        unzip -q "$APK_FILE" -d apk_analysis
        echo "=== assets/ directory contents ==="
        find apk_analysis/assets -type f || echo "No assets directory found"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: wordle-apk
        path: wordle/bin/*.apk
        if-no-files-found: warn

    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: wordle/.buildozer/
        if-no-files-found: warn

    - name: Upload APK analysis
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: apk-analysis
        path: wordle/apk_analysis/
        if-no-files-found: warn
