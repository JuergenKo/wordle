name: Build Android APK

on:
  push:
    branches: [ "main" ]
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug - List repository files
      run: |
        echo "=== Repository Structure ==="
        ls -la
        echo "=== data/ directory ==="
        ls -la data/ || echo "data/ directory does not exist"
        echo "=== kv/ directory ==="
        ls -la kv/ || echo "kv/ directory does not exist"

    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y git zip unzip openjdk-17-jdk python3 python3-pip python3-venv python3-setuptools autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev

    - name: Set up Python Virtual Environment
      run: |
        python3 -m venv venv
        source venv/bin/activate
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
        echo "PATH=$VIRTUAL_ENV/bin:$PATH" >> $GITHUB_ENV

    - name: Install specific compatible versions
      run: |
        source venv/bin/activate
        # Install specific versions that work together
        pip install "cython==0.29.33"  # Older Cython version that doesn't have the 'long' issue
        pip install "buildozer==1.5.0"
        pip install "setuptools==65.5.0"

    - name: Pre-download Android SDK components (optional but helpful)
      run: |
        source venv/bin/activate
        echo "Setting up initial buildozer environment..."
        # This will initialize the environment without building
        buildozer android update 2>&1 | head -50 || echo "Initialization may have partial errors"

    - name: Apply patch for python-for-android long issue
      run: |
        source venv/bin/activate
        echo "=== Applying workaround for 'long' type issue ==="
        # Find the jnius_utils.pxi file and apply a patch
        find /home/runner -name "jnius_utils.pxi" -type f 2>/dev/null | head -1 | while read file; do
          echo "Found file: $file"
          # Create a backup
          cp "$file" "${file}.backup"
          # Apply the fix: replace 'long' with 'int' for Python 3 compatibility
          sed -i 's/\(isinstance(arg, long)\)/isinstance(arg, int)/g' "$file"
          sed -i 's/\(isinstance(arg, long)\)/isinstance(arg, int)/g' "$file"
          echo "Applied patch to: $file"
        done || echo "Patch application may have failed - continuing anyway"

    - name: Build the APK
      run: |
        source venv/bin/activate
        echo "=== Starting the build process ==="
        # Set a longer timeout for the first build
        timeout 3600 buildozer -v android debug || echo "Build may have timed out but could still be progressing"

    - name: Check for APK file
      run: |
        echo "=== Checking for built APK ==="
        find . -name "*.apk" -type f 2>/dev/null | head -5 || echo "No APK files found"
        ls -la bin/ 2>/dev/null || echo "bin directory not found"

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: wordle-apk
        path: bin/*.apk
        if-no-files-found: warn

    - name: Upload build logs and environment info
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-debug-info
        path: |
          .buildozer/
          *.log
        if-no-files-found: warn
