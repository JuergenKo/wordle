name: Build Android APK

on:
  push:
    branches: [ "main" ]
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug - List repository files
      run: |
        echo "=== Repository Structure ==="
        ls -la
        echo "=== data/ directory ==="
        ls -la data/ || echo "data/ directory does not exist"
        echo "=== kv/ directory ==="
        ls -la kv/ || echo "kv/ directory does not exist"

    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y git zip unzip openjdk-17-jdk python3 python3-pip python3-venv python3-setuptools autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev

    - name: Set up Python Virtual Environment
      run: |
        python3 -m venv venv
        source venv/bin/activate
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
        echo "PATH=$VIRTUAL_ENV/bin:$PATH" >> $GITHUB_ENV

    - name: Install specific compatible versions
      run: |
        source venv/bin/activate
        pip install "cython==0.29.33"
        pip install "buildozer==1.5.0"
        pip install "setuptools==65.5.0"

    - name: Verify source files are accessible
      run: |
        source venv/bin/activate
        echo "=== Ensuring source files are accessible ==="
        # Check if main.py exists
        if [ ! -f "main.py" ]; then
          echo "ERROR: main.py not found in root directory!"
          ls -la *.py || echo "No Python files found"
          exit 1
        fi
        echo "main.py found successfully"
        
        # Check if data directory exists
        if [ ! -d "data" ]; then
          echo "ERROR: data/ directory not found!"
          exit 1
        fi
        echo "data/ directory found"
        
        # Check if kv directory exists  
        if [ ! -d "kv" ]; then
          echo "ERROR: kv/ directory not found!"
          exit 1
        fi
        echo "kv/ directory found"

    - name: Clean previous build and initialize
      run: |
        source venv/bin/activate
        echo "=== Cleaning previous build artifacts ==="
        buildozer android clean || echo "Clean may have failed, continuing..."
        
        echo "=== Force re-initialization ==="
        # Remove the .buildozer directory to start fresh
        rm -rf .buildozer || echo "No .buildozer to remove"
        
        # Initialize with debug info
        buildozer init || echo "Init may have warnings"

    - name: Build the APK
      run: |
        source venv/bin/activate
        echo "=== Starting the build process ==="
        # Build with verbose output and longer timeout
        timeout 7200 buildozer -v android debug 2>&1 | tee build.log || echo "Build completed or timed out"
        
        # Check if APK was created despite possible timeout
        if [ -f "bin/*.apk" ]; then
          echo "SUCCESS: APK file found!"
          ls -la bin/
        else
          echo "Checking for APK in different locations..."
          find . -name "*.apk" -type f 2>/dev/null | head -5 || echo "No APK files found yet"
        fi

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: wordle-apk
        path: bin/*.apk
        if-no-files-found: warn

    - name: Upload build logs for debugging
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          build.log
          .buildozer/
        if-no-files-found: warn
